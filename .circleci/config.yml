# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: 6a45a8220dfcedcc9a5a4e3dcc193742cb49bfd1ec2785ab97106aeffb267710
    working_directory: ~/repo
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/golang
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: |
            go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      # - run:
      #     name: Run tests
      #     command: |
      #       mkdir -p /tmp/test-reports
      #       gotestsum --junitfile /tmp/test-reports/unit-tests.xml
      # - store_test_results:
      #     path: /tmp/test-reports
      # - run:
      #     name: Run tests and coverage
      #     command: go test -race -coverprofile=coverage.txt -covermode=atomic
      # - run:
      #     name: Upload coverage to Codecov
      #     command: bash <(curl -s https://codecov.io/bash)
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests
          command: |
            ./cc-test-reporter before-build
            go test -coverprofile c.out ./...
            ./cc-test-reporter after-build --exit-code $?

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build